import{_ as i,D as s,c as h,I as o,w as a,a4 as r,j as e,o as c,a as n}from"./chunks/framework.DtvhUNIn.js";const l="/assets/CH-UN08.CcEpPHW9.jpg",A=JSON.parse('{"title":"Chap8. OCP: THE OPEN-CLOSED PRINCIPLE OCP：开闭原则","description":"","frontmatter":{},"headers":[],"relativePath":"ch8.md","filePath":"ch8.md","lastUpdated":1723191287000}'),p={name:"ch8.md"},d=r("",27),u=e("p",null,"The essential insight here is that generating the report involves two separate responsibilities: the calculation of the reported data, and the presentation of that data into a web- and printer-friendly form.",-1),m=e("blockquote",null,[e("p",null,"这里的核心就是将应用生成报表的过程拆成两个不同的操作。即先计算出报表数据，再生成具体的展示报表（分别以网页及纸质的形式展示）。")],-1),b=e("p",null,"Having made this separation, we need to organize the source code dependencies to ensure that changes to one of those responsibilities do not cause changes in the other. Also, the new organization should ensure that the behavior can be extended without undo modification.",-1),g=e("blockquote",null,[e("p",null,"接下来，我们就该修改其源代码之间的依赖关系了。这样做的目的是保证其中一个操作被修改之后不会影响到另外一个操作。同时，我们所构建的新的组织形式应该保证该程序后续在行为上的扩展都无须修改现有代码。")],-1),f=e("p",null,"We accomplish this by partitioning the processes into classes, and separating those classes into components, as shown by the double lines in the diagram in Figure 8.2. In this figure, the component at the upper left is the Controller. At the upper right, we have the Interactor. At the lower right, there is the Database. Finally, at the lower left, there are four components that represent the Presenters and the Views.",-1),w=e("blockquote",null,[e("p",null,"在具体实现上，我们会将整个程序进程划分成一系列的类，然后再将这些类分割成不同的组件。下面，我们用图 8.2 中的那些双线框来具体描述一下整个实现。在这个图中，左上角的组件是 Controller，右上角是 Interactor，右下角是 Database，左下角则有四个组件分别用于代表不同的 Presenter 和 View。")],-1),k=r("",6),I=r("",29);function q(_,C,P,y,T,v){const t=s("Figures");return c(),h("div",null,[d,o(t,{figure:"8-1"},{default:a(()=>[n("Applying the SRP")]),_:1}),u,m,b,g,f,w,o(t,{figure:"8-2"},{default:a(()=>[n("Partitioning the processes into classes and separating the classes into components")]),_:1}),k,o(t,{figure:"8-3"},{default:a(()=>[n("The component relationships are unidirectional")]),_:1}),I])}const D=i(p,[["render",q]]);export{A as __pageData,D as default};
