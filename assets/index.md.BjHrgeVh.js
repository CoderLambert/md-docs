import{_ as l,c as a,o as h,a4 as i}from"./chunks/framework.ffW4nm55.js";const e="/md-docs/assets/cover.CnhjMQdC.jpg",p=JSON.parse('{"title":"Clean Architecture 中文","description":"","frontmatter":{},"headers":[],"relativePath":"index.md","filePath":"index.md","lastUpdated":1723187378000}'),t={name:"index.md"},r=i('<h1 id="clean-architecture-中文" tabindex="-1">Clean Architecture 中文 <a class="header-anchor" href="#clean-architecture-中文" aria-label="Permalink to &quot;Clean Architecture 中文&quot;">​</a></h1><div style="margin:0 auto;width:40%;"><img src="'+e+'"></div><h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">​</a></h2><ul><li><a href="./part1.html">第一部分 概述</a></li><li><a href="./ch1.html">第 1 章 设计与架构究竟是什么</a></li><li><a href="./ch2.html">第 2 章 两个价值维度</a></li></ul><hr><ul><li><a href="./part2.html">第二部分 从基础构件开始：编程范式</a></li><li><a href="./ch3.html">第 3 章 编程范式总览</a></li><li><a href="./ch4.html">第 4 章 结构化编程</a></li><li><a href="./ch5.html">第 5 章 面向对象编程</a></li><li><a href="./ch6.html">第 6 章 函数式编程</a></li></ul><hr><ul><li><a href="./part3.html">第三部分 设计原则</a></li><li><a href="./ch7.html">第 7 章 SRP：单一职责原则</a></li><li><a href="./ch8.html">第 8 章 OCP：开闭原则</a></li><li><a href="./ch9.html">第 9 章 LSP：里氏替换原则</a></li><li><a href="./ch10.html">第 10 章 ISP：接口隔离原则</a></li><li><a href="./ch11.html">第 11 章 DIP：依赖反转原则</a></li></ul><hr><ul><li><a href="./part4.html">第四部分 组件构建原则</a></li><li><a href="./ch12.html">第 12 章 组件</a></li><li><a href="./ch13.html">第 13 章 组件聚合</a></li><li><a href="./ch14.html">第 14 章 组件耦合</a></li></ul><hr><ul><li><a href="./part5.html">第五部分 软件架构</a></li><li><a href="./ch15.html">第 15 章 什么是软件架构</a></li><li><a href="./ch16.html">第 16 章 独立性</a></li><li><a href="./ch17.html">第 17 章 划分边界</a></li><li><a href="./ch18.html">第 18 章 边界剖析</a></li><li><a href="./ch19.html">第 19 章 策略与层次</a></li><li><a href="./ch20.html">第 20 章 业务逻辑</a></li><li><a href="./ch21.html">第 21 章 尖叫的软件架构</a></li><li><a href="./ch22.html">第 22 章 整洁架构</a></li><li><a href="./ch23.html">第 23 章 展示器和谦卑对象</a></li><li><a href="./ch24.html">第 24 章 不完全边界</a></li><li><a href="./ch25.html">第 25 章 层次与边界</a></li><li><a href="./ch26.html">第 26 章 Main 组件</a></li><li><a href="./ch27.html">第 27 章 服务：宏观和微观</a></li><li><a href="./ch28.html">第 28 章 测试边界</a></li><li><a href="./ch29.html">第 29 章 整洁的嵌入式架构</a></li></ul><hr><ul><li><a href="./part6.html">第六部分 实现细节</a></li><li><a href="./ch30.html">第 30 章 数据库只是实现细节</a></li><li><a href="./ch31.html">第 31 章 Web 是实现细节</a></li><li><a href="./ch32.html">第 32 章 应用程序框架是实现细节</a></li><li><a href="./ch33.html">第 33 章 案例分析：视频销售网站</a></li><li><a href="./ch34.html">第 34 章 拾遗</a></li></ul>',14),c=[r];function m(f,n,o,s,d,_){return h(),a("div",null,c)}const P=l(t,[["render",m]]);export{p as __pageData,P as default};
